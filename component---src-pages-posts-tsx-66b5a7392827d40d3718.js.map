{"version":3,"file":"component---src-pages-posts-tsx-66b5a7392827d40d3718.js","mappings":"oRA8FA,MAnF4BA,KAC1B,MAAM,kBAAEC,IAAsBC,EAAAA,EAAAA,gBAAe,cAwBvCC,EAAQF,EAAkBG,MAYhC,OAXAD,EACGE,MACC,CACEC,EACAC,IAEOD,EAAEE,YAAYC,MAAQF,EAAEC,YAAYC,QAG9CC,UAGDC,EAAAA,cAACC,EAAAA,EAAO,CAACC,MAAOC,EAAAA,GACdH,EAAAA,cAACI,EAAAA,EAAI,CAACC,MAAO,CAAEC,UAAW,SAAWC,WAAW,OAAOC,KAAK,UAC1DR,EAAAA,cAACS,EAAAA,EAAM,MACPT,EAAAA,cAACU,EAAAA,EAAW,CAACC,MAAI,EAACC,IAAI,SACpBZ,EAAAA,cAACa,EAAAA,EAAO,KACLrB,EAAMsB,KACJC,IAUC,MAAMC,EAAQD,EAAKlB,YAAYoB,OAC3BC,EAAAA,EAAAA,GAASH,EAAKlB,YAAYoB,YAC1BE,EAEJ,OACEnB,EAAAA,cAACoB,EAAAA,EAAG,CACFC,IAAKN,EAAKO,GACVjB,MAAO,CAAEkB,UAAW,OAAQC,aAAc,SAE1CxB,EAAAA,cAACyB,EAAAA,EAAY,CACX3B,MAAOiB,EAAKlB,YAAYC,MACxB4B,QAASX,EAAKlB,YAAY8B,KAC1BC,OAAQb,EAAKlB,YAAYgC,MACzBC,KAAMf,EAAKlB,YAAYiC,KACvBd,MAAOA,IAEL,OAOlBhB,EAAAA,cAAC+B,EAAAA,EAAa,MACd/B,EAAAA,cAACgC,EAAAA,EAAM,MACC,ECxFd,G,+CCWA,IANgBC,IAAuC,IAAtC,SAAEC,GAAiB,EAClC,OACElC,EAAAA,cAACoB,EAAAA,EAAG,CAACf,MAAO,CAAEkB,UAAW,OAAQC,aAAc,SAAWU,EAAe,C","sources":["webpack://blog/./src/components/BlogPosts.tsx","webpack://blog/./src/pages/posts.tsx","webpack://blog/./src/components/Content.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Box, Grommet, Page, PageContent } from \"grommet\";\r\nimport BlogPostCard from \"./BlogPostCard\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport Header from \"./Header\";\r\nimport Content from \"./Content\";\r\nimport Footer from \"./Footer\";\r\nimport { mainTheme } from \"../themes/themes\";\r\nimport { ImageDataLike, getImage } from \"gatsby-plugin-image\";\r\nimport CookieConsent from \"./CookieConsest\";\r\n\r\nconst BlogPosts: React.FC = () => {\r\n  const { allMarkdownRemark } = useStaticQuery(graphql`\r\n    query AllBlogPosts1 {\r\n      allMarkdownRemark {\r\n        nodes {\r\n          frontmatter {\r\n            index\r\n            title\r\n            desc\r\n            date\r\n            thumb {\r\n              childImageSharp {\r\n                gatsbyImageData(\r\n                  layout: FIXED\r\n                  placeholder: BLURRED\r\n                  formats: [AUTO, WEBP, AVIF]\r\n                )\r\n              }\r\n            }\r\n          }\r\n          id\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  const posts = allMarkdownRemark.nodes;\r\n  posts\r\n    .sort(\r\n      (\r\n        a: { frontmatter: { index: number } },\r\n        b: { frontmatter: { index: number } }\r\n      ) => {\r\n        return a.frontmatter.index - b.frontmatter.index;\r\n      }\r\n    )\r\n    .reverse();\r\n\r\n  return (\r\n    <Grommet theme={mainTheme}>\r\n      <Page style={{ minHeight: \"100vh\" }} background=\"main\" kind=\"narrow\">\r\n        <Header />\r\n        <PageContent fill gap=\"small\">\r\n          <Content>\r\n            {posts.map(\r\n              (post: {\r\n                id: React.Key | null | undefined;\r\n                frontmatter: {\r\n                  index: string;\r\n                  title: string;\r\n                  desc: string;\r\n                  date: string;\r\n                  thumb: ImageDataLike | undefined;\r\n                };\r\n              }) => {\r\n                const image = post.frontmatter.thumb\r\n                  ? getImage(post.frontmatter.thumb)\r\n                  : undefined;\r\n\r\n                return (\r\n                  <Box\r\n                    key={post.id}\r\n                    style={{ marginTop: \"20px\", marginBottom: \"10px\" }}\r\n                  >\r\n                    <BlogPostCard\r\n                      index={post.frontmatter.index}\r\n                      content={post.frontmatter.desc}\r\n                      header={post.frontmatter.title}\r\n                      date={post.frontmatter.date}\r\n                      image={image}\r\n                    ></BlogPostCard>\r\n                  </Box>\r\n                );\r\n              }\r\n            )}\r\n          </Content>\r\n        </PageContent>\r\n      </Page>\r\n      <CookieConsent />\r\n      <Footer />\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nexport default BlogPosts;\r\n","import BlogPosts from \"../components/BlogPosts\";\r\n\r\nexport default BlogPosts;\r\n","import React from \"react\";\r\nimport { Box } from \"grommet\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Content = ({ children }: Props): JSX.Element => {\r\n  return (\r\n    <Box style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>{children}</Box>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"],"names":["BlogPosts","allMarkdownRemark","useStaticQuery","posts","nodes","sort","a","b","frontmatter","index","reverse","React","Grommet","theme","mainTheme","Page","style","minHeight","background","kind","Header","PageContent","fill","gap","Content","map","post","image","thumb","getImage","undefined","Box","key","id","marginTop","marginBottom","BlogPostCard","content","desc","header","title","date","CookieConsent","Footer","_ref","children"],"sourceRoot":""}